#version 450
#extension GL_ARB_separate_shader_objects : enable

struct Light
{
  vec4   pos;
  vec4   dir;
  vec4   col;
};

#define MAX_LIGHTS 16

layout(binding = 0)  uniform UBO {
	mat4   g_mView;
	mat4   g_mProj;
	mat4   g_mTran;
	vec4   g_vColor;
	vec4   g_vLight;
	vec4   g_vClipPlane;
	vec3   g_vUp;
	vec3   g_vEye;
	vec3   g_vLook;
	float  g_fTime;
	float  g_fShine;
	float  g_fRandom;
	float  g_fAmbient;
	float  g_fLightPower;
	int    g_iClipping;
	int    g_iLights;

  Light  g_sLights[MAX_LIGHTS];
} ubo;

layout(push_constant) uniform ConstBlock
{
  mat4   model;
  vec4   color;
} cb;

layout(location = 0) in vec3 a_Vertex;
layout(location = 1) in vec3 a_Normal;
layout(location = 2) in vec4 a_Color;
layout(location = 3) in vec2 a_UV;

layout(location = 0) out vec4 color;

void main()
{
  color = cb.color * a_Color;

  gl_Position = ubo.g_mProj * ubo.g_mView * cb.model * vec4(a_Vertex, 1.0);

  gl_Position.y *= -1;
}

//Fragment Shader
#version 450

#define MAX_TEXTURES 4

#define TEX_COLOR    0
#define TEX_NORMAL   1
#define TEX_SPECULAR 2

layout(set = 0, binding = 1) uniform sampler2D textures[MAX_TEXTURES];

layout(location = 0) in vec4 color;

layout(location = 0) out vec4 oColor;

void main()
{
  oColor = color;
}
