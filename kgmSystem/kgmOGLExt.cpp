#include "kgmOGLExt.h"
#include "../kgmBase/kgmLog.h"

#ifdef OGL

#ifdef WIN32
 #define GLEXT_FN(func, type)  func = (type)wglGetProcAddress(#func)
#endif

#ifdef LINUX
 #define GLEXT_FN(func, type)  func = (type)glXGetProcAddress((const GLubyte*)#func)
#endif

#ifdef ANDROID
 #define GLEXT_FN(func, type)
#endif

#ifdef DARWIN
 #define GLEXT_FN(func, type)
#endif

#else

 #define GLEXT_FN(func, type)

#endif

//DEBUG
PFNGLDEBUGMESSAGECALLBACKKHRPROC glDebugMessageCallbackKHR = 0;

//DRAW ELEMENTS
PFNGLDRAWRANGEELEMENTSPROC      glDrawRangeElements = 0;

//TEXTURE EXTENTIONS
PFNGLACTIVETEXTUREARBPROC       glActiveTextureARB = 0;
PFNGLCLIENTACTIVETEXTUREARBPROC glClientActiveTextureARB = 0;

//VERTEX BUFFER EXTENTIONS
PFNGLGENBUFFERSARBPROC			  glGenBuffersARB = 0;
PFNGLDELETEBUFFERSARBPROC		  glDeleteBuffersARB = 0;
PFNGLBINDBUFFERARBPROC			  glBindBufferARB = 0;
PFNGLBUFFERDATAARBPROC			  glBufferDataARB = 0;
PFNGLBUFFERSUBDATAARBPROC     glBufferSubDataARB = 0;
PFNGLGETBUFFERSUBDATAARBPROC	glGetBufferSubDataARB = 0;
PFNGLMAPBUFFERARBPROC			    glMapBufferARB = 0;
PFNGLUNMAPBUFFERARBPROC			  glUnmapBufferARB = 0;

//FRAME BUFFER EXTENTIONS
PFNGLGENFRAMEBUFFERSEXTPROC         glGenFramebuffersEXT = 0;
PFNGLDELETEFRAMEBUFFERSEXTPROC		  glDeleteFramebuffersEXT = 0;
PFNGLBINDFRAMEBUFFEREXTPROC			    glBindFramebufferEXT = 0;
PFNGLFRAMEBUFFERTEXTURE2DEXTPROC	  glFramebufferTexture2DEXT = 0;
PFNGLCHECKFRAMEBUFFERSTATUSEXTPROC  glCheckFramebufferStatusEXT = 0;
PFNGLGENRENDERBUFFERSEXTPROC        glGenRenderbuffersEXT = 0;
PFNGLBINDRENDERBUFFEREXTPROC        glBindRenderbufferEXT = 0;
PFNGLRENDERBUFFERSTORAGEEXTPROC     glRenderbufferStorageEXT = 0;
PFNGLFRAMEBUFFERRENDERBUFFEREXTPROC glFramebufferRenderbufferEXT = 0;
PFNGLDELETERENDERBUFFERSEXTPROC     glDeleteRenderbuffersEXT = 0;

//GLSL SHADER EXTENTIONS
PFNGLCREATESHADEROBJECTARBPROC   glCreateShaderObjectARB = 0;
PFNGLCREATEPROGRAMOBJECTARBPROC  glCreateProgramObjectARB = 0;
PFNGLCREATEPROGRAMPROC           glCreateProgram = 0;
PFNGLDELETEOBJECTARBPROC         glDeleteObjectARB = 0;
PFNGLSHADERSOURCEARBPROC         glShaderSourceARB = 0;
PFNGLCOMPILESHADERARBPROC        glCompileShaderARB = 0;
PFNGLATTACHOBJECTARBPROC         glAttachObjectARB = 0;
PFNGLDETACHOBJECTARBPROC         glDetachObjectARB = 0;
PFNGLLINKPROGRAMARBPROC          glLinkProgramARB = 0;
PFNGLVALIDATEPROGRAMARBPROC      glValidateProgramARB = 0;
PFNGLUSEPROGRAMOBJECTARBPROC     glUseProgramObjectARB = 0;
PFNGLISPROGRAMARBPROC            glIsProgramARB = 0;
PFNGLGETOBJECTPARAMETERFVARBPROC glGetObjectParameterfvARB = 0;
PFNGLGETOBJECTPARAMETERIVARBPROC glGetObjectParameterivARB = 0;
PFNGLGETINFOLOGARBPROC           glGetInfoLogARB = 0;
PFNGLGETUNIFORMLOCATIONARBPROC   glGetUniformLocationARB = 0;
PFNGLUNIFORM1IARBPROC            glUniform1iARB = 0;
PFNGLUNIFORM1IVARBPROC           glUniform1ivARB = 0;
PFNGLUNIFORM2IVARBPROC           glUniform2ivARB = 0;
PFNGLUNIFORM3IVARBPROC           glUniform3ivARB = 0;
PFNGLUNIFORM4IVARBPROC           glUniform4ivARB = 0;
PFNGLUNIFORM1FVARBPROC           glUniform1fvARB = 0;
PFNGLUNIFORM2FVARBPROC           glUniform2fvARB = 0;
PFNGLUNIFORM3FVARBPROC           glUniform3fvARB = 0;
PFNGLUNIFORM4FVARBPROC           glUniform4fvARB = 0;
PFNGLUNIFORMMATRIX2FVARBPROC     glUniformMatrix2fvARB = 0;
PFNGLUNIFORMMATRIX3FVARBPROC     glUniformMatrix3fvARB = 0;
PFNGLUNIFORMMATRIX4FVARBPROC     glUniformMatrix4fvARB = 0;
PFNGLBINDATTRIBLOCATIONARBPROC   glBindAttribLocationARB = 0;
PFNGLGETUNIFORMFVARBPROC         glGetUniformfvARB = 0;

PFNGLDISABLEVERTEXATTRIBARRAYARBPROC glDisableVertexAttribArrayARB = 0;
PFNGLENABLEVERTEXATTRIBARRAYARBPROC glEnableVertexAttribArrayARB = 0;
PFNGLVERTEXATTRIBPOINTERARBPROC     glVertexAttribPointerARB = 0;
PFNGLGETATTRIBLOCATIONARBPROC     glGetAttribLocationARB = 0;

PFNGLBLENDEQUATIONEXTPROC         glBlendEquationEXT = 0;

#ifdef WIN32
 PFNWGLSWAPINTERVALFARPROC wglSwapIntervalEXT = 0;
#endif
#ifdef LINUX
 PFNGLXSWAPINTERVALSGIPROC glxSwapIntervalSGI = 0;
#endif


bool glInitExt(){
  GLEXT_FN(glDebugMessageCallbackKHR,		PFNGLDEBUGMESSAGECALLBACKKHRPROC);

  GLEXT_FN(glDrawRangeElements,		PFNGLDRAWRANGEELEMENTSPROC);
  GLEXT_FN(glActiveTextureARB,       PFNGLACTIVETEXTUREARBPROC);
  GLEXT_FN(glClientActiveTextureARB, PFNGLCLIENTACTIVETEXTUREARBPROC);

  GLEXT_FN(glGenBuffersARB, PFNGLGENBUFFERSARBPROC);
  GLEXT_FN(glDeleteBuffersARB, PFNGLDELETEBUFFERSARBPROC);
  GLEXT_FN(glBindBufferARB, PFNGLBINDBUFFERARBPROC);
  GLEXT_FN(glBufferDataARB, PFNGLBUFFERDATAARBPROC);
  GLEXT_FN(glBufferSubDataARB, PFNGLBUFFERSUBDATAARBPROC);
  GLEXT_FN(glGetBufferSubDataARB, PFNGLGETBUFFERSUBDATAARBPROC);
  GLEXT_FN(glMapBufferARB, PFNGLMAPBUFFERARBPROC);
  GLEXT_FN(glUnmapBufferARB, PFNGLUNMAPBUFFERARBPROC);

  GLEXT_FN(glGenFramebuffersEXT, PFNGLGENFRAMEBUFFERSEXTPROC);
  GLEXT_FN(glDeleteFramebuffersEXT, PFNGLDELETEFRAMEBUFFERSEXTPROC);
  GLEXT_FN(glBindFramebufferEXT, PFNGLBINDFRAMEBUFFEREXTPROC);
  GLEXT_FN(glFramebufferTexture2DEXT, PFNGLFRAMEBUFFERTEXTURE2DEXTPROC);
  GLEXT_FN(glCheckFramebufferStatusEXT, PFNGLCHECKFRAMEBUFFERSTATUSEXTPROC);
  GLEXT_FN(glGenRenderbuffersEXT, PFNGLGENRENDERBUFFERSEXTPROC);
  GLEXT_FN(glBindRenderbufferEXT, PFNGLBINDRENDERBUFFEREXTPROC);
  GLEXT_FN(glRenderbufferStorageEXT, PFNGLRENDERBUFFERSTORAGEEXTPROC);
  GLEXT_FN(glFramebufferRenderbufferEXT, PFNGLFRAMEBUFFERRENDERBUFFEREXTPROC);
  GLEXT_FN(glDeleteRenderbuffersEXT, PFNGLDELETERENDERBUFFERSEXTPROC);

  GLEXT_FN(glCreateProgramObjectARB, PFNGLCREATEPROGRAMOBJECTARBPROC);
  GLEXT_FN(glCreateShaderObjectARB,  PFNGLCREATESHADEROBJECTARBPROC);
  GLEXT_FN(glDeleteObjectARB,        PFNGLDELETEOBJECTARBPROC);
  GLEXT_FN(glShaderSourceARB,        PFNGLSHADERSOURCEARBPROC);
  GLEXT_FN(glCompileShaderARB,       PFNGLCOMPILESHADERARBPROC);
  GLEXT_FN(glAttachObjectARB,        PFNGLATTACHOBJECTARBPROC);
  GLEXT_FN(glDetachObjectARB,        PFNGLDETACHOBJECTARBPROC);
  GLEXT_FN(glLinkProgramARB,         PFNGLLINKPROGRAMARBPROC);
  GLEXT_FN(glValidateProgramARB,     PFNGLVALIDATEPROGRAMARBPROC);
  GLEXT_FN(glUseProgramObjectARB,    PFNGLUSEPROGRAMOBJECTARBPROC);
  GLEXT_FN(glIsProgramARB,           PFNGLISPROGRAMARBPROC);
  GLEXT_FN(glGetObjectParameterfvARB,PFNGLGETOBJECTPARAMETERFVARBPROC);
  GLEXT_FN(glGetObjectParameterivARB,PFNGLGETOBJECTPARAMETERIVARBPROC);
  GLEXT_FN(glGetInfoLogARB,			     PFNGLGETINFOLOGARBPROC);
  GLEXT_FN(glGetUniformLocationARB,	PFNGLGETUNIFORMLOCATIONARBPROC);
  GLEXT_FN(glUniform1iARB,			PFNGLUNIFORM1IARBPROC);
  GLEXT_FN(glUniform1ivARB,			PFNGLUNIFORM1IVARBPROC);
  GLEXT_FN(glUniform2ivARB,			PFNGLUNIFORM2IVARBPROC);
  GLEXT_FN(glUniform3ivARB,			PFNGLUNIFORM3IVARBPROC);
  GLEXT_FN(glUniform4ivARB,			PFNGLUNIFORM4IVARBPROC);
  GLEXT_FN(glUniform1fvARB,			PFNGLUNIFORM1FVARBPROC);
  GLEXT_FN(glUniform2fvARB,			PFNGLUNIFORM2FVARBPROC);
  GLEXT_FN(glUniform3fvARB,			PFNGLUNIFORM3FVARBPROC);
  GLEXT_FN(glUniform4fvARB,			PFNGLUNIFORM4FVARBPROC);
  GLEXT_FN(glUniformMatrix2fvARB,   PFNGLUNIFORMMATRIX2FVARBPROC);
  GLEXT_FN(glUniformMatrix3fvARB,   PFNGLUNIFORMMATRIX3FVARBPROC);
  GLEXT_FN(glUniformMatrix4fvARB,   PFNGLUNIFORMMATRIX4FVARBPROC);
  GLEXT_FN(glUniform4ivARB,         PFNGLUNIFORM4IVARBPROC);
  GLEXT_FN(glBindAttribLocationARB, PFNGLBINDATTRIBLOCATIONARBPROC);
  GLEXT_FN(glGetUniformfvARB,       PFNGLGETUNIFORMFVARBPROC);
  GLEXT_FN(glEnableVertexAttribArrayARB, PFNGLENABLEVERTEXATTRIBARRAYARBPROC);
  GLEXT_FN(glDisableVertexAttribArrayARB, PFNGLDISABLEVERTEXATTRIBARRAYARBPROC);
  GLEXT_FN(glVertexAttribPointerARB, PFNGLVERTEXATTRIBPOINTERARBPROC);
  GLEXT_FN(glGetAttribLocationARB, PFNGLGETATTRIBLOCATIONARBPROC);

  GLEXT_FN(glBlendEquation,  PFNGLBLENDEQUATIONEXTPROC);

#ifdef WIN32
 GLEXT_FN(wglSwapIntervalEXT,	PFNWGLSWAPINTERVALFARPROC);
#endif

#ifdef LINUX
 GLEXT_FN(glxSwapIntervalSGI,    PFNGLXSWAPINTERVALSGIPROC);
#endif

 return true;
}
